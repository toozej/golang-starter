---
env:
  - GO111MODULE=on

before:
  hooks:
    - go mod tidy
    - ./scripts/completions.sh
    - ./scripts/manpages.sh

snapshot:
  name_template: '{{ incpatch .Version }}-next'

gomod:
  proxy: true

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
    goarm:
      - "7"
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate
        }} -X main.builtBy=goreleaser

universal_binaries:
  - replace: false

checksum:
  name_template: 'checksums.txt'

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^test:'
      - '^chore'
      - 'merge conflict'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: Dependency updates
      regexp: "^.*feat\\(deps\\)*:+.*$"
      order: 300
    - title: 'New Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 100
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 200
    - title: 'Documentation updates'
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 400
    - title: Other work
      order: 9999

# TODO re-enable this portion, disabling/removing from GHA CI workflow
# will want to add in pushing to Quay.io
# also will want https://github.com/goreleaser/goreleaser/blob/main/scripts/entrypoint.sh and its related tokens
#dockers:
#  - image_templates:
#      - 'toozej/golang-starter:{{ .Tag }}-amd64'
#      - 'ghcr.io/toozej/golang-starter:{{ .Tag }}-amd64'
#    dockerfile: Dockerfile
#    use: buildx
#    build_flag_templates:
#      - "--pull"
#      - "--label=io.artifacthub.package.readme-url=https://raw.githubusercontent.com/toozej/golang-starter/main/README.md"
#      - "--label=io.artifacthub.package.maintainers=[{\"name\":\"toozej\"}]"
#      - "--label=io.artifacthub.package.license=GPLv3"
#      - "--label=org.opencontainers.image.description=Golang starter template"
#      - "--label=org.opencontainers.image.created={{.Date}}"
#      - "--label=org.opencontainers.image.name={{.ProjectName}}"
#      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
#      - "--label=org.opencontainers.image.version={{.Version}}"
#      - "--label=org.opencontainers.image.source={{.GitURL}}"
#      - "--platform=linux/amd64"
#    extra_files:
#      - scripts/entrypoint.sh
#  - image_templates:
#      - 'toozej/golang-starter:{{ .Tag }}-arm64'
#      - 'ghcr.io/toozej/golang-starter:{{ .Tag }}-arm64'
#    dockerfile: Dockerfile
#    use: buildx
#    build_flag_templates:
#      - "--pull"
#      - "--label=io.artifacthub.package.readme-url=https://raw.githubusercontent.com/toozej/golang-starter/main/README.md"
#      - "--label=io.artifacthub.package.maintainers=[{\"name\":\"toozej\"}]"
#      - "--label=io.artifacthub.package.license=GPLv3"
#      - "--label=org.opencontainers.image.description=Golang starter template"
#      - "--label=org.opencontainers.image.created={{.Date}}"
#      - "--label=org.opencontainers.image.name={{.ProjectName}}"
#      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
#      - "--label=org.opencontainers.image.version={{.Version}}"
#      - "--label=org.opencontainers.image.source={{.GitURL}}"
#      - "--platform=linux/arm64"
#    goarch: arm64
#    extra_files:
#      - scripts/entrypoint.sh

docker_manifests:
  - name_template: 'toozej/golang-starter:{{ .Tag }}'
    image_templates:
      - 'toozej/golang-starter:{{ .Tag }}-amd64'
      - 'toozej/golang-starter:{{ .Tag }}-arm64'
  - name_template: 'ghcr.io/toozej/golang-starter:{{ .Tag }}'
    image_templates:
      - 'ghcr.io/toozej/golang-starter:{{ .Tag }}-amd64'
      - 'ghcr.io/toozej/golang-starter:{{ .Tag }}-arm64'
  - name_template: 'toozej/golang-starter:latest'
    image_templates:
      - 'toozej/golang-starter:{{ .Tag }}-amd64'
      - 'toozej/golang-starter:{{ .Tag }}-arm64'
  - name_template: 'ghcr.io/toozej/golang-starter:latest'
    image_templates:
      - 'ghcr.io/toozej/golang-starter:{{ .Tag }}-amd64'
      - 'ghcr.io/toozej/golang-starter:{{ .Tag }}-arm64'

archives:
  - name_template: '{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end
      }}'
    replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      386: i386
      amd64: x86_64
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE.md
      - completions/*
      - manpages/*

brews:
  - tap:
      owner: golang-starter
      name: homebrew-tap
    folder: Formula
    goarm: "7"
    homepage: https://github.com/toozej/golang-starter
    description: Golang starter template
    license: GPLv3
    test: |
      system "#{bin}/golang-starter -v"
    dependencies:
      - name: go
        type: optional
      - name: git
    install: |-
      bin.install "golang-starter"
      bash_completion.install "completions/golang-starter.bash" => "golang-starter"
      zsh_completion.install "completions/golang-starter.zsh" => "_golang-starter"
      fish_completion.install "completions/golang-starter.fish"
      man1.install "manpages/golang-starter.1.gz"

#aurs:
#  - homepage: https://github.com/toozej/golang-starter
#    description: Golang starter template
#    maintainers:
#      - 'toozej'
#    license: GPLv3
#    private_key: '{{ .Env.AUR_KEY }}'
#    git_url: 'ssh://aur@aur.archlinux.org/golang-starter.git'
#    package: |-
#      # bin
#      install -Dm755 "./golang-starter" "${pkgdir}/usr/bin/golang-starter"
#
#      # license
#      install -Dm644 "./LICENSE.md" "${pkgdir}/usr/share/licenses/golang-starter/LICENSE"
#
#      # completions
#      mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
#      mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
#      mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
#      install -Dm644 "./completions/golang-starter.bash" "${pkgdir}/usr/share/bash-completion/completions/golang-starter"
#      install -Dm644 "./completions/golang-starter.zsh" "${pkgdir}/usr/share/zsh/site-functions/_golang-starter"
#      install -Dm644 "./completions/golang-starter.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/golang-starter.fish"
#
#      # man pages
#      install -Dm644 "./manpages/golang-starter.1.gz" "${pkgdir}/usr/share/man/man1/golang-starter.1.gz"
#
#scoop:
#  bucket:
#    owner: toozej
#    name: scoop-bucket
#  homepage: https://github.com/toozej/golang-starter
#  description: |-
#      Golang starter template
#  license: GPLv3

nfpms:
  - file_name_template: '{{ .ConventionalFileName }}'
    id: packages
    homepage: https://github.com/toozej/golang-starter
    description: |-
      Golang starter template
    maintainer: toozej
    license: GPLv3
    vendor: golang-starter
    bindir: /usr/bin
    section: utils
    contents:
      - src: ./completions/golang-starter.bash
        dst: /usr/share/bash-completion/completions/golang-starter
        file_info:
          mode: 0644
      - src: ./completions/golang-starter.fish
        dst: /usr/share/fish/completions/golang-starter.fish
        file_info:
          mode: 0644
      - src: ./completions/golang-starter.zsh
        dst: /usr/share/zsh/vendor-completions/_golang-starter
        file_info:
          mode: 0644
      - src: ./manpages/golang-starter.1.gz
        dst: /usr/share/man/man1/golang-starter.1.gz
        file_info:
          mode: 0644
      - src: ./LICENSE.md
        dst: /usr/share/doc/golang-starter/copyright
        file_info:
          mode: 0644
    formats:
      - apk
      - deb
      - rpm
    dependencies:
      - git
    recommends:
      - golang
    deb:
      lintian_overrides:
        - statically-linked-binary
        - changelog-file-missing-in-native-package

sboms:
  - artifacts: archive

signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    output: true
    artifacts: checksum
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'

docker_signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    artifacts: manifests
    output: true
    args:
      - 'sign'
      - '${artifact}'

milestones:
  - close: true

release:
  footer: |
    **Full Changelog**: https://github.com/toozej/golang-starter/compare/{{ .PreviousTag }}...{{ .Tag }}
