---
name: security

on:
  workflow_run:
    workflows: [ci]
    types: [completed]

jobs:
  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  codeql-analyze:
    name: codeql-analyze
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v2
        with:
          languages: go
      - uses: github/codeql-action/autobuild@v2
      - uses: github/codeql-action/analyze@v2

  grype-scan-source:
    name: grype-scan-source
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: anchore/scan-action@v3
        with:
          path: "."
          fail-build: true

  grype-scan-image:
    name: grype-scan-image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: anchore/scan-action@v3
        with:
          image: "toozej/golang-starter:latest"
          fail-build: true

  trivy-scan-source:
    name: trivy-scan-source
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  trivy-scan-image:
    name: trivy-scan-image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'toozej/golang-starter:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
